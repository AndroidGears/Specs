{
  "name": "JodaTime",
  "summary": "Joda-Time provides a quality replacement for the Java date and time classes. The design allows for multiple calendar systems, while still providing a simple API. The 'default' calendar is the ISO8601 standard which is used by XML. The Gregorian, Julian, Buddhist, Coptic, Ethiopic and Islamic systems are also included, and we welcome further additions. Supporting classes include time zone, duration, format and parsing.",
  "release_notes": "- Interval/MutableInterval .isEqual() [#20]
  Add method to compare intervals ignoring the chronology
  https://github.com/JodaOrg/joda-time/issues/20<br/><br/>- Chronology classes now define equals methods [#36]
  Previously, the Chronology classes relied on caching in factory methods
  to guarantee instances were singletons
  Now, there are dedicated, normal, equals methods
  This will aid weird cases where deserialization or similar avoids the caches
  It will make no difference to most users<br/><br/>- Maximum size for pattern cache [#49]
  Sets a maximum size for the cache to avoid memory issues<br/><br/>- Add LocalDateTime.toDate(TimeZone) [#48]
  Provides an alternate way to create a java.util.Date that avoids some synchronization<br/><br/>- Home page moved
  http://www.joda.org/joda-time",
  "version": "2.3.0",
  "type": "jar",
  "copyright": "Joda.org 2014",
  "homepage": "http://www.joda.org/joda-time/",
  "license": "Apache",
  "authors": [
    {
      "name": "Joda.org",
      "email": "scolebourne@joda.org"
    }
  ],
  "minimum_api": 4,
  "source": {
    "url": "https://github.com/AndroidGears/JodaTime.git",
    "tag": "v2.3.0",
    "source_files": "joda-time-2.3.jar"
  },
  "dependencies": null,
  "tags": [
    "time",
    "date",
    "library",
    "calendar",
    "formatting",
    "parsing"
  ]
}
